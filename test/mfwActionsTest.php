<?php
require_once __DIR__.'/initialize.php';

class TestActions extends mfwActions {
	public function setTemplateName($templatename)
	{
		return parent::setTemplateName($templatename);
	}
	public function getTemplateName()
	{
		return $this->templatename;
	}
	public function setTemplateClass($templatecls)
	{
		return parent::setTemplateClass($templatecls);
	}
	public function getTemplateClass()
	{
		return $this->templatecls;
	}
	public function build($params=array())
	{
		return parent::build($params);
	}
	public function redirect($query,$params=array())
	{
		return parent::redirect($query,$params);
	}
}

class TestActionsTemplateMock {
	protected $name;
	public function __construct($templatename){
		$this->name = $templatename;
	}
	public function build($params){
		return $this->name.json_encode($params);
	}
}


/**
 * Test class for mfwActions.
 * Generated by PHPUnit on 2013-01-09 at 00:31:23.
 */
class mfwActionsTest extends PHPUnit_Framework_TestCase
{
	/**
	 * @var mfwActions
	 */
	protected $object;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp()
	{
		$this->object = new TestActions('module','action');
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown()
	{
	}

	/**
	 */
	public function testInitialize()
	{
		$ret = $this->object->initialize();
		$this->assertNull($ret);
	}

	/**
	 */
	public function testGetModule()
	{
		$mod = $this->object->getModule();
		$this->assertEquals('module',$mod);
	}

	/**
	 */
	public function testGetAction()
	{
		$act = $this->object->getAction();
		$this->assertEquals('action',$act);
	}

	/**
	 */
	public function testSetTemplateName()
	{
		$def = $this->object->getTemplateName();
		$this->assertNull($def);

		$this->object->setTemplateName('templatename');
		$tmp = $this->object->getTemplateName();
		$this->assertEquals('templatename',$tmp);
	}

	/**
	 */
	public function testSetTemplateClass()
	{
		$def = $this->object->getTemplateClass();
		$this->assertEquals('mfwTemplate',$def);

		$this->object->setTemplateClass('templatecls');
		$cls = $this->object->getTemplateClass();
		$this->assertEquals('templatecls',$cls);
	}

	/**
	 */
	public function testBuild()
	{
		$this->object->setTemplateClass('TestActionsTemplateMock');

		$ret = $this->object->build();
		$exp = array(array(),'module/action[]');
		$this->assertEquals($exp,$ret);

		$this->object->setTemplateName('tmpname');
		$ret = $this->object->build(array('a'=>1,'bb'=>'ccc'));
		$exp = array(array(),'tmpname{"a":1,"bb":"ccc"}');
		$this->assertEquals($exp,$ret);
	}

	/**
	 */
	public function testRedirect()
	{
		$ret = $this->object->redirect('http://example.com/aaa',array('b'=>'c'));
		$exp = array(array('Location: http://example.com/aaa?b=c'),null);
		$this->assertEquals($exp,$ret);

		$_SERVER['HTTP_HOST'] = 'localhost';
		$_SERVER['SCRIPT_NAME'] = '/path/main.php';
		$ret = $this->object->redirect('/mod/act');

		$exp = array(array('Location: http://localhost/path/mod/act'),null);
		$this->assertEquals($exp,$ret);
	}

	/**
	 */
	public function testExecuteDefaultAction()
	{
		$ret = $this->object->executeDefaultAction();
		$exp = array(
			array('HTTP/1.1 404 Not Found'),
			'404 Not Found',
			);
		$this->assertEquals($exp,$ret);
	}

}
?>
