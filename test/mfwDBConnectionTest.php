<?php
require_once __DIR__.'/initialize.php';

/**
 * Test class for mfwDBConnection.
 * Generated by PHPUnit on 2013-01-02 at 13:43:10.
 */
class mfwDBConnectionTest extends PHPUnit_Framework_TestCase
{
	protected $property_con_pool;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp()
	{
		$this->property_con_pool = new ReflectionProperty('mfwDBConnection','con_pool');
		$this->property_con_pool->setAccessible(true);
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown()
	{
	}

	/**
	 */
	public function testGetPDO()
	{
		mfwServerEnv::setEnv('unittest');
		$con = mfwDBConnection::getPDO();
		$this->assertTrue($con instanceof PDO);

		$exp = array(
			'default_master',
			);
		$pool = $this->property_con_pool->getValue();
		$pool_keys = array_keys($pool['unittest']);
		$this->assertEquals($exp,$pool_keys);
	}

	/**
	 * @depends testGetPDO
	 */
	public function testDisConnect()
	{
		mfwServerEnv::setEnv('unittest');
		mfwDBConnection::getPDO();

		mfwDBConnection::disconnect();
		$this->assertEquals(array(),$this->property_con_pool->getValue());
	}

	public function testUnconnectable()
	{
		mfwDBConnection::disconnect();
		mfwServerEnv::setEnv('unconnectable');

		$msg = '';
		try{
			mfwDBConnection::getPDO();
		}
		catch(PDOException $e){
			$msg = $e->getMessage();
		}
		$this->assertStringStartsWith('SQLSTATE[42000]',$msg);
	}

	/**
	 * @depends testGetPDO
	 */
	public function testConnectionCache()
	{
		mfwServerEnv::setEnv('unittest');

		$pdo1 = mfwDBConnection::getPDO();
		$pdo2 = mfwDBConnection::getPDO();
		$hash1 = spl_object_hash($pdo1);
		$hash2 = spl_object_hash($pdo2);
		$this->assertEquals($hash1,$hash2);

		mfwDBConnection::disconnect();
		$pdo3 = mfwDBConnection::getPDO();
		$hash3 = spl_object_hash($pdo3);
		$this->assertNotEquals($hash1,$hash3);
	}

}
?>
