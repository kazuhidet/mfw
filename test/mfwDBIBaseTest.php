<?php
require_once __DIR__.'/initialize.php';

/**
 * Test class for mfwDBIBase.
 * Generated by PHPUnit on 2013-01-02 at 18:25:55.
 */
class mfwDBIBaseTest extends PHPUnit_Framework_TestCase
{
	public static function setUpBeforeClass()
	{
		mfwServerEnv::setEnv('unittest');
		$con = mfwDBConnection::getPDO();
		$con->query("drop table if exists test");
		$con->query("create table unittest.test (
			id integer not null auto_increment,
			value integer default null,
			primary key (id)
		)Engine=InnoDB default charset=utf8;");
		$con->query("insert into unittest.test (id,value) values
			(1,10),(2,20),(3,30),(4,40),(5,50);");
	}

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp()
	{
		mfwServerEnv::setEnv('unittest');
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown()
	{
	}

	/**
	 */
	public function testPrepare()
	{
		$sql = 'select * from test';
		$stmt = mfwDBIBase::prepare($sql);
		$this->assertTrue($stmt instanceof PDOStatement);
	}

	/**
	 */
	public function testQuery()
	{
		$sql = 'select * from test where id<=2';
		$stmt = mfwDBIBase::query($sql);
		$this->assertTrue($stmt instanceof PDOStatement);

		$result = $stmt->fetchAll(PDO::FETCH_ASSOC);
		$exp = array(
			array('id'=>1, 'value'=>10),
			array('id'=>2, 'value'=>20),
			);
		$this->assertEquals($exp,$result);
	}

	/**
	 */
	public function testGetRow()
	{
		$sql = 'select * from test where id=?';
		$row = mfwDBIBase::getRow($sql,array(3));

		$exp = array('id'=>3, 'value'=>30);
		$this->assertEquals($exp,$row);
	}

	/**
	 */
	public function testGetAll()
	{
		$sql = 'select * from test';
		$rows = mfwDBIBase::getAll($sql);
		$exp = array(
			array('id'=>1, 'value'=>10),
			array('id'=>2, 'value'=>20),
			array('id'=>3, 'value'=>30),
			array('id'=>4, 'value'=>40),
			array('id'=>5, 'value'=>50),
			);
		$this->assertEquals($exp,$rows);
	}

	/**
	 */
	public function testGetOne()
	{
		$sql = 'select count(*) from test where id<=:id';
		$bind = array(':id'=>5);
		$count = mfwDBIBase::getOne($sql,$bind);
		$this->assertEquals(5,$count);
	}

	/**
	 */
	public function testInvalidSQL()
	{
		$sql = 'select * from dummy_table';
		$msg = '';
		try{
			mfwDBIBase::query($sql);
		}
		catch(PDOException $e){
			$msg = $e->getMessage();
		}
		$this->assertStringStartsWith('SQLSTATE[42S02]',$msg);
	}
}
?>
