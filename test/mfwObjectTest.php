<?php
require_once __DIR__.'/initialize.php';

/**
 * Test class for mfwObject.
 * Generated by PHPUnit on 2013-01-08 at 19:01:47.
 */
class mfwObjectTest extends PHPUnit_Framework_TestCase
{
	public static function setUpBeforeClass()
	{
		mfwServerEnv::setEnv('unittest');

		$table = TestObjectDb::TABLE_NAME;
		mfwDBIBase::query("drop table if exists $table");
		mfwDBIBase::query("create table `$table` (
			`key` int(11) NOT NULL AUTO_INCREMENT,
			`value` int(11) DEFAULT NULL,
			PRIMARY KEY (`key`)
		) ENGINE=InnoDB DEFAULT CHARSET=utf8");
		mfwDBIBase::query("insert into `$table`
			values (1,1),(2,2),(3,3)");
	}

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp()
	{
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown()
	{
	}

	/**
	 */
	public function testToArray()
	{
		$arr = array(
			'key' => 10,
			'value' => 100,
			'a' => 'b',
			);
		$obj = new TestObject($arr);
		$this->assertEquals($arr,$obj->toArray());
	}

	/**
	 * @depends testToArray
	 */
	public function testFromArray()
	{
		$arr = array(
			'key' => 20,
			'value' => 200,
			'a' => 'cc',
			);
		$obj = new TestObject();

		$obj->fromArray($arr);
		$this->assertEquals($arr,$obj->toArray());
	}

	/**
	 */
	public function testGetPrimaryKey()
	{
		$obj = new TestObject;
		$this->assertNull($obj->getPrimaryKey());

		$obj = new TestObject(array('key'=>30));
		$this->assertEquals(30,$obj->getPrimaryKey());
	}

	/**
	 */
	public function testInsert()
	{
		$table = TestObjectDb::TABLE_NAME;
		$createtable = mfwDBIBase::getRow("show create table $table");
		preg_match('/AUTO_INCREMENT=([0-9]*)/',$createtable['Create Table'],$m);
		$auto_increment = $m[1];

		// insert
		$arr = array(
			'value' => 100,
			);
		$obj = new TestObject($arr);
		$obj->insert();
		$row = mfwDBIBase::getRow("select * from $table where `key`=$auto_increment");
		$this->assertEquals($auto_increment,$obj->getPrimaryKey());
		$this->assertEquals(array('key'=>$auto_increment,'value'=>100),$row);
	}

	/**
	 * @depends testInsert
	 */
	public function testUpdate()
	{
		$table = TestObjectDb::TABLE_NAME;

		$obj = new TestObject(array('value'=>100));
		$obj->insert();
		$this->assertNotNull($obj->getPrimaryKey());

		$obj->setValue(200);
		$obj->update();
		$row = mfwDBIBase::getRow("select * from $table where `key`={$obj->getPrimaryKey()}");
		$this->assertEquals(200,$row['value']);
	}

	/**
	 */
	public function testDelete()
	{
		$before = TestObjectDb::selectAll();
		$count = $before->count();

		$obj = TestObjectDb::retrieveByPK(1);
		$obj->delete();

		$objs = TestObjectDb::selectAll();
		$this->assertEquals($count-1,$objs->count());
		$this->assertFalse(isset($objs[1]));
	}

	public function testDeleteWithoutId()
	{
		$before = TestObjectDb::selectAll();
		$count = $before->count();

		$obj = new TestObject();
		$obj->delete();

		$objs = TestObjectDb::selectAll();
		$this->assertEquals($count,$objs->count());
	}
}
?>
